{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-dataingestion-udemy"
		},
		"LS_abls_buyalot_webstore_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_abls_buyalot_webstore'"
		},
		"LS_adls_data_engineering_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_adls_data_engineering'"
		},
		"LS_asql_data_engineeering_metadat_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_asql_data_engineeering_metadat'"
		},
		"ls_webstpre_gen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_webstpre_gen2'"
		},
		"LS_adls_data_engineering_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stdataengineeringudemy.dfs.core.windows.net/"
		},
		"ls_webstpre_gen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stdataengineeringudemy.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_Util_send_email_notification')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This is a utility pipeline that sends email notifications.",
				"activities": [
					{
						"name": "Get Email Addresses",
						"description": "Get the Email Recipients for a specific system code and dataset name ",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[GetEmailAddresses]",
								"storedProcedureParameters": {
									"DatasetName": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.datasetName",
											"type": "Expression"
										}
									},
									"SystemCode": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.systemCode",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_asql_email_address",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Email Address",
						"description": "Send a Message to each email address",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Email Addresses",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Email Addresses').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "send email",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:00:10",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://prod-71.eastus.logic.azure.com:443/workflows/10701d0c4e2f4cdba015ea21bff839c1/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=T5FF_jtnWbeY00Ai9-3nkPjLJL7PWzjBLkdEbuZVY5k",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@json(concat('{\n    \"emailAddress\":\"',item().emailAddress,'\",\n    \"subject\":\"',pipeline().parameters.subject,'\",\n    \"messageBody\":\"',pipeline().parameters.message,'\"\n}'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"systemCode": {
						"type": "string",
						"defaultValue": "OWS"
					},
					"datasetName": {
						"type": "string",
						"defaultValue": "Sales"
					},
					"subject": {
						"type": "string"
					},
					"message": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Utlility"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_asql_email_address')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_data_ingestion_json')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_dat",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_abls_buyalot_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_adls_data_engineering_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_abls_buyalot_json')]",
				"[concat(variables('factoryId'), '/datasets/DS_adls_data_engineering_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_data_ingestion_json_v2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_dat",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_abls_buyalot_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_adls_data_engineering_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "send email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "copy_dat",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:00:10",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-71.eastus.logic.azure.com:443/workflows/10701d0c4e2f4cdba015ea21bff839c1/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=T5FF_jtnWbeY00Ai9-3nkPjLJL7PWzjBLkdEbuZVY5k",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@json(concat('{\n    \"emailAddress\":\"mounesh97411@gmail.com\",\n    \"subject\":\"ADF Pipeline(PL_Data_Ingestion_Json)\",\n    \"messageBody\":\"Ingestion of Web Store Data into the Data Lake has been completed succesfully\"\n}'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_abls_buyalot_json')]",
				"[concat(variables('factoryId'), '/datasets/DS_adls_data_engineering_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_data_ingestion_json_v3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_dat",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_abls_buyalot_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_adls_data_engineering_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Send Email Notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "copy_dat",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Util_send_email_notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"systemCode": {
									"value": "@pipeline().parameters.systemCode",
									"type": "Expression"
								},
								"datasetName": {
									"value": "@pipeline().parameters.datasetName",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"systemCode": {
						"type": "string",
						"defaultValue": "OWS"
					},
					"datasetName": {
						"type": "string",
						"defaultValue": "Sales"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_abls_buyalot_json')]",
				"[concat(variables('factoryId'), '/datasets/DS_adls_data_engineering_json')]",
				"[concat(variables('factoryId'), '/pipelines/PL_Util_send_email_notification')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_data_ingestion_json_v4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_dat",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_abls_buyalot_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_adls_data_engineering_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Send Email Notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Log Pipeline Success",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Util_send_email_notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"systemCode": {
									"value": "@pipeline().parameters.systemCode",
									"type": "Expression"
								},
								"datasetName": {
									"value": "@pipeline().parameters.datasetName",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Log Pipeline Success",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_dat",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertPipelineLog]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertFromUtc(utcnow(),'India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().parameters.runID",
										"type": "Expression"
									},
									"type": "String"
								},
								"SnapshotDate": {
									"value": {
										"value": "@formatDateTime(pipeline().parameters.snapshotData,'yyyy-MM-dd')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"SourceToTargetID": {
									"value": {
										"value": "2",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StartTime": {
									"value": {
										"value": "@convertFromUtc(pipeline().TriggerTime,'India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "success",
										"type": "Expression"
									},
									"type": "String"
								},
								"UpdateAt": {
									"value": {
										"value": "@convertFromUtc(utcnow(),'India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_asql_data_engineeering_metadat",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"systemCode": {
						"type": "string",
						"defaultValue": "OWS"
					},
					"datasetName": {
						"type": "string",
						"defaultValue": "Sales"
					},
					"runID": {
						"type": "string",
						"defaultValue": "1"
					},
					"snapshotData": {
						"type": "string",
						"defaultValue": "2023-02-20"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_abls_buyalot_json')]",
				"[concat(variables('factoryId'), '/datasets/DS_adls_data_engineering_json')]",
				"[concat(variables('factoryId'), '/pipelines/PL_Util_send_email_notification')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_asql_data_engineeering_metadat')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_data_ingestion_json_v5')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_dat",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_abls_buyalot_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_adls_data_engineering_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Set Success Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "copy_dat",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_status",
							"value": "Success"
						}
					},
					{
						"name": "Set failed Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "copy_dat",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_status",
							"value": "failed"
						}
					},
					{
						"name": "Log Pipeline Metadat Success",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set Success Status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_util_log_pipeline_metadata",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"snapshotDate": {
									"value": "@formatDateTime(pipeline().parameters.snapshotData,'yyyy-MM-dd')",
									"type": "Expression"
								},
								"status": {
									"value": "@variables('v_status')",
									"type": "Expression"
								},
								"runID": {
									"value": "@pipeline().parameters.runID",
									"type": "Expression"
								},
								"sourceToTargetID": "2",
								"pipelineTriggerTime": {
									"value": "@convertFromUtc(pipeline().TriggerTime,'Indian Standard Time')",
									"type": "Expression"
								},
								"pipelineID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pipelineNAME": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"systemCode": {
									"value": "@pipeline().parameters.systemCode",
									"type": "Expression"
								},
								"datasetName": {
									"value": "@pipeline().parameters.datasetName",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Log Pipeline Metadat Failed",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set failed Status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_util_log_pipeline_metadata",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"snapshotDate": {
									"value": "@formatDateTime(pipeline().parameters.snapshotData,'yyyy-MM-dd')",
									"type": "Expression"
								},
								"status": {
									"value": "@variables('v_status')",
									"type": "Expression"
								},
								"runID": {
									"value": "@pipeline().parameters.runID",
									"type": "Expression"
								},
								"sourceToTargetID": "5",
								"pipelineTriggerTime": {
									"value": "@convertFromUtc(pipeline().TriggerTime,'Indian Standard Time')",
									"type": "Expression"
								},
								"pipelineID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pipelineNAME": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"systemCode": {
									"value": "@pipeline().parameters.systemCode",
									"type": "Expression"
								},
								"datasetName": {
									"value": "@pipeline().parameters.datasetName",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"systemCode": {
						"type": "string",
						"defaultValue": "OWS"
					},
					"datasetName": {
						"type": "string",
						"defaultValue": "Sales"
					},
					"runID": {
						"type": "string",
						"defaultValue": "1"
					},
					"snapshotData": {
						"type": "string",
						"defaultValue": "2023-02-20"
					}
				},
				"variables": {
					"v_status": {
						"type": "String",
						"defaultValue": "Success"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_abls_buyalot_json')]",
				"[concat(variables('factoryId'), '/datasets/DS_adls_data_engineering_json')]",
				"[concat(variables('factoryId'), '/pipelines/PL_util_log_pipeline_metadata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_util_log_pipeline_metadata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Log Pipeline Run information(metadata)",
				"activities": [
					{
						"name": "Test Status",
						"description": "Test the status 'Success' or 'Failed'",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.status,'Success')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Log Pipeline Run Information metadata",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[InsertPipelineLog]",
										"storedProcedureParameters": {
											"EndTime": {
												"value": {
													"value": "@convertFromUtc(utcnow(),'India Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().parameters.pipelineID",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineName": {
												"value": {
													"value": "@pipeline().parameters.pipelineNAME",
													"type": "Expression"
												},
												"type": "String"
											},
											"RunID": {
												"value": {
													"value": "@pipeline().parameters.runID",
													"type": "Expression"
												},
												"type": "String"
											},
											"SnapshotDate": {
												"value": {
													"value": "@pipeline().parameters.snapshotDate",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"SourceToTargetID": {
												"value": {
													"value": "@pipeline().parameters.sourceToTargetID",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"StartTime": {
												"value": {
													"value": "@pipeline().parameters.pipelineTriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												},
												"type": "String"
											},
											"UpdateAt": {
												"value": {
													"value": "@convertFromUtc(utcnow(),'India Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_asql_data_engineeering_metadat",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "set status and send message",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Log Pipeline Run Information metadata",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_util_set_status_messages",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"status": {
												"value": "@pipeline().parameters.status",
												"type": "Expression"
											},
											"triggeredPipeline": {
												"value": "@pipeline().parameters.pipelineNAME",
												"type": "Expression"
											},
											"systemCode": {
												"value": "@pipeline().parameters.systemCode",
												"type": "Expression"
											},
											"datasetName": {
												"value": "@pipeline().parameters.datasetName",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Log Pipeline Run Information metadataSuccess",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[InsertPipelineLog]",
										"storedProcedureParameters": {
											"EndTime": {
												"value": {
													"value": "@convertFromUtc(utcnow(),'India Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().parameters.pipelineID",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineName": {
												"value": {
													"value": "@pipeline().parameters.pipelineNAME",
													"type": "Expression"
												},
												"type": "String"
											},
											"RunID": {
												"value": {
													"value": "@pipeline().parameters.runID",
													"type": "Expression"
												},
												"type": "String"
											},
											"SnapshotDate": {
												"value": {
													"value": "@pipeline().parameters.snapshotDate",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"SourceToTargetID": {
												"value": {
													"value": "@pipeline().parameters.sourceToTargetID",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"StartTime": {
												"value": {
													"value": "@pipeline().parameters.pipelineTriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												},
												"type": "String"
											},
											"UpdateAt": {
												"value": {
													"value": "@convertFromUtc(utcnow(),'India Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_asql_data_engineeering_metadat",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"snapshotDate": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"runID": {
						"type": "string"
					},
					"sourceToTargetID": {
						"type": "string"
					},
					"pipelineTriggerTime": {
						"type": "string"
					},
					"pipelineID": {
						"type": "string"
					},
					"pipelineNAME": {
						"type": "string"
					},
					"systemCode": {
						"type": "string"
					},
					"datasetName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Utlility"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_asql_data_engineeering_metadat')]",
				"[concat(variables('factoryId'), '/pipelines/PL_util_set_status_messages')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_util_set_status_messages')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Sets the status message from a calling pipeline and constructs a subject and  a message ",
				"activities": [
					{
						"name": "Switch Status",
						"description": "Construct a message and subject depending  on the supplied status of either 'Success or Failed'",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.status",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "Success",
									"activities": [
										{
											"name": "PL_Util_send_email_notification",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "PL_Util_send_email_notification",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {}
											}
										},
										{
											"name": "Send Email Notifications -Success messages",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "PL_Util_send_email_notification",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"systemCode": {
														"value": "@pipeline().parameters.systemCode",
														"type": "Expression"
													},
													"datasetName": {
														"value": "@pipeline().parameters.datasetName",
														"type": "Expression"
													},
													"subject": {
														"value": "@concat('ADF pipeline:',pipeline().parameters.triggeredPipeline)",
														"type": "Expression"
													},
													"message": {
														"value": "@concat(pipeline().parameters.triggeredPipeline,'has  completed succcessfuly')",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "failed",
									"activities": [
										{
											"name": "Send Email Notifications -failed messages",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "PL_Util_send_email_notification",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"systemCode": {
														"value": "@pipeline().parameters.systemCode",
														"type": "Expression"
													},
													"datasetName": {
														"value": "@pipeline().parameters.datasetName",
														"type": "Expression"
													},
													"subject": {
														"value": "@concat('ADF pipeline:',pipeline().parameters.triggeredPipeline)",
														"type": "Expression"
													},
													"message": {
														"value": "@concat(pipeline().parameters.triggeredPipeline,'has  completed failed please check logs')",
														"type": "Expression"
													}
												}
											}
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "Send Email Notifications -Default_messages",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_Util_send_email_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"systemCode": {
												"value": "@pipeline().parameters.systemCode",
												"type": "Expression"
											},
											"datasetName": {
												"value": "@pipeline().parameters.datasetName",
												"type": "Expression"
											},
											"subject": {
												"value": "@concat('ADF pipeline:',pipeline().parameters.triggeredPipeline)",
												"type": "Expression"
											},
											"message": {
												"value": "@concat(pipeline().parameters.triggeredPipeline,'has no valid status',pipeline().parameters.status,'expecting Failed or Success')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"status": {
						"type": "string"
					},
					"triggeredPipeline": {
						"type": "string"
					},
					"systemCode": {
						"type": "string"
					},
					"datasetName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Utlility"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Util_send_email_notification')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_abls_buyalot_files_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Json source dataset",
				"linkedServiceName": {
					"referenceName": "LS_abls_buyalot_webstore",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"directory": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "webstore"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_abls_buyalot_webstore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_abls_buyalot_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_abls_buyalot_webstore",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "webstore"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "onlinesale.json",
						"container": "sales"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"SalesOrderNumber": {
							"type": "string"
						},
						"SalesOrderLineNumber": {
							"type": "integer"
						},
						"RevisionNumber": {
							"type": "integer"
						},
						"OrderQuantity": {
							"type": "integer"
						},
						"ProductCode": {
							"type": "string"
						},
						"PromotionsCode": {
							"type": "integer"
						},
						"CurrencyCode": {
							"type": "string"
						},
						"UnitPrice": {
							"type": "number"
						},
						"ExtendedAmount": {
							"type": "number"
						},
						"UnitPriceDiscountPct": {
							"type": "number"
						},
						"DiscountAmount": {
							"type": "number"
						},
						"ProductStandardCost": {
							"type": "number"
						},
						"TotalProductCost": {
							"type": "number"
						},
						"SalesAmount": {
							"type": "number"
						},
						"TaxAmt": {
							"type": "number"
						},
						"Freight": {
							"type": "number"
						},
						"CustomerCode": {
							"type": "string"
						},
						"Region": {
							"type": "string"
						},
						"Country": {
							"type": "string"
						},
						"OrderDate": {
							"type": "string"
						},
						"DueDate": {
							"type": "string"
						},
						"ShipDate": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_abls_buyalot_webstore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_adls_data_engineering_folders_son')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_webstpre_gen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"directory": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "webstore"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_webstpre_gen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_adls_data_engineering_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_webstpre_gen2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "webstore"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "webdevelopment"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_webstpre_gen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_asql_email_address')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_asql_data_engineeering_metadat",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "metadata"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SystemCode",
						"type": "varchar"
					},
					{
						"name": "DatasetName",
						"type": "varchar"
					},
					{
						"name": "SystemInfoID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "EmailAddress",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EmailRecipients"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_asql_data_engineeering_metadat')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_asql_source_to_target_details')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_asql_data_engineeering_metadat",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "metadata"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SourceToTargetID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SourceSystemCode",
						"type": "varchar"
					},
					{
						"name": "SourceSystem",
						"type": "varchar"
					},
					{
						"name": "SourceDatasetName",
						"type": "varchar"
					},
					{
						"name": "SourceDataObjectName",
						"type": "varchar"
					},
					{
						"name": "SourceContainer",
						"type": "varchar"
					},
					{
						"name": "SourceRelativePathSchema",
						"type": "varchar"
					},
					{
						"name": "SourceTechnicalName",
						"type": "varchar"
					},
					{
						"name": "TargetSystemCode",
						"type": "varchar"
					},
					{
						"name": "TargetSystem",
						"type": "varchar"
					},
					{
						"name": "TargetDatasetName",
						"type": "varchar"
					},
					{
						"name": "TargetDataObjectName",
						"type": "varchar"
					},
					{
						"name": "TargetContainer",
						"type": "varchar"
					},
					{
						"name": "TargetRelativePathSchema",
						"type": "varchar"
					},
					{
						"name": "TargetTechnicalName",
						"type": "varchar"
					},
					{
						"name": "Stage",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SourceToTargetView"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_asql_data_engineeering_metadat')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_abls_buyalot_webstore')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to the buyalotwebsites data",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_abls_buyalot_webstore_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_adls_data_engineering')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_adls_data_engineering_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_adls_data_engineering_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_asql_data_engineeering_metadat')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to the metadata database",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_asql_data_engineeering_metadat_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_webstpre_gen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_webstpre_gen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_webstpre_gen2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_asql_source_to_target_details_copy1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_asql_data_engineeering_metadat",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "metadata"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SourceToTargetID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SourceSystemCode",
						"type": "varchar"
					},
					{
						"name": "SourceSystem",
						"type": "varchar"
					},
					{
						"name": "SourceDatasetName",
						"type": "varchar"
					},
					{
						"name": "SourceDataObjectName",
						"type": "varchar"
					},
					{
						"name": "SourceContainer",
						"type": "varchar"
					},
					{
						"name": "SourceRelativePathSchema",
						"type": "varchar"
					},
					{
						"name": "SourceTechnicalName",
						"type": "varchar"
					},
					{
						"name": "TargetSystemCode",
						"type": "varchar"
					},
					{
						"name": "TargetSystem",
						"type": "varchar"
					},
					{
						"name": "TargetDatasetName",
						"type": "varchar"
					},
					{
						"name": "TargetDataObjectName",
						"type": "varchar"
					},
					{
						"name": "TargetContainer",
						"type": "varchar"
					},
					{
						"name": "TargetRelativePathSchema",
						"type": "varchar"
					},
					{
						"name": "TargetTechnicalName",
						"type": "varchar"
					},
					{
						"name": "Stage",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SourceToTargetView"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_asql_data_engineeering_metadat')]"
			]
		}
	]
}