{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-cloudguru-lab"
		},
		"ls_blob_employee_table_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_blob_employee_table'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ls_blob_employee_table')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_blob_employee_table_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_blob_department_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob_employee_table",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "JoinDemo"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "departments.csv",
						"container": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DepartmentID",
						"type": "String"
					},
					{
						"name": "DepartmentName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob_employee_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_blob_employe_sql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob_employee_table",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AggregateDemo"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Employees_sql.csv",
						"container": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EMPNO",
						"type": "String"
					},
					{
						"name": "ENAME",
						"type": "String"
					},
					{
						"name": "JOB",
						"type": "String"
					},
					{
						"name": "MGR",
						"type": "String"
					},
					{
						"name": "HIREDATE",
						"type": "String"
					},
					{
						"name": "SAL",
						"type": "String"
					},
					{
						"name": "COMM",
						"type": "String"
					},
					{
						"name": "DEPTNO",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob_employee_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_blob_employe_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob_employee_table",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "JoinDemo"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "employees.csv",
						"container": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EmployeeID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "DepartmentID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob_employee_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_blob_join_result_destination_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob_employee_table",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "JoinDemo"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "destination"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob_employee_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_aggregate_demo')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "AggregateDemo"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_blob_employe_sql",
								"type": "DatasetReference"
							},
							"name": "SrEmployeeTable"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_blob_join_result_destination_blob",
								"type": "DatasetReference"
							},
							"name": "DestinationAggregate"
						}
					],
					"transformations": [
						{
							"name": "AggregateEmployeTable"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EMPNO as string,",
						"          ENAME as string,",
						"          JOB as string,",
						"          MGR as string,",
						"          HIREDATE as string,",
						"          SAL as float,",
						"          COMM as string,",
						"          DEPTNO as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> SrEmployeeTable",
						"SrEmployeeTable aggregate(groupBy(DEPTNO),",
						"     MAXSAL = max(SAL),",
						"          AVGSAL = avg(SAL),",
						"          TotalEmployee = count(EMPNO)) ~> AggregateEmployeTable",
						"AggregateEmployeTable sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['AggregateResult.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> DestinationAggregate"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_blob_employe_sql')]",
				"[concat(variables('factoryId'), '/datasets/ds_blob_join_result_destination_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_join_demo')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "JoinDemo"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_blob_employe_table",
								"type": "DatasetReference"
							},
							"name": "SrEemployeTable"
						},
						{
							"dataset": {
								"referenceName": "ds_blob_department_table",
								"type": "DatasetReference"
							},
							"name": "SrDepartmenTable"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_blob_join_result_destination_blob",
								"type": "DatasetReference"
							},
							"name": "JoinResultStoreInBlobDestination"
						}
					],
					"transformations": [
						{
							"name": "JoinTwoTable"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EmployeeID as string,",
						"          Name as string,",
						"          DepartmentID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> SrEemployeTable",
						"source(output(",
						"          DepartmentID as string,",
						"          DepartmentName as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> SrDepartmenTable",
						"SrEemployeTable, SrDepartmenTable join(SrEemployeTable@DepartmentID == SrDepartmenTable@DepartmentID,",
						"     joinType:'outer',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> JoinTwoTable",
						"JoinTwoTable sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['EmployeDepartmentTable.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> JoinResultStoreInBlobDestination"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_blob_employe_table')]",
				"[concat(variables('factoryId'), '/datasets/ds_blob_department_table')]",
				"[concat(variables('factoryId'), '/datasets/ds_blob_join_result_destination_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_surrogate_key_Demo')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SurrogateKeyDemo"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_blob_employe_sql",
								"type": "DatasetReference"
							},
							"name": "EmployeTable"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_blob_join_result_destination_blob",
								"type": "DatasetReference"
							},
							"name": "SurrogateKeyResults"
						}
					],
					"transformations": [
						{
							"name": "SurrogateKey1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EMPNO as string,",
						"          ENAME as string,",
						"          JOB as string,",
						"          MGR as string,",
						"          HIREDATE as string,",
						"          SAL as string,",
						"          COMM as string,",
						"          DEPTNO as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> EmployeTable",
						"EmployeTable keyGenerate(output(RowNo as long),",
						"     startAt: 100L,",
						"     stepValue: 1L) ~> SurrogateKey1",
						"SurrogateKey1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['SurrogateKeyResult.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> SurrogateKeyResults"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_blob_employe_sql')]",
				"[concat(variables('factoryId'), '/datasets/ds_blob_join_result_destination_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_aggregate_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AggregateDemo",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_aggregate_demo",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SrEmployeeTable": {},
									"DestinationAggregate": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "AggregateDemo"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-19T06:24:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_aggregate_demo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_join_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "JointEmployeDepartmentTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_join_demo",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SrEemployeTable": {},
									"SrDepartmenTable": {},
									"JoinResultStoreInBlobDestination": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "JoinDemo"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-19T05:13:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_join_demo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_surrogate_key_Demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfSurrogateKeyDemo",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_surrogate_key_Demo",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EmployeTable": {},
									"SurrogateKeyResults": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "SurrogateKeyDemo"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-19T06:31:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_surrogate_key_Demo')]"
			]
		}
	]
}